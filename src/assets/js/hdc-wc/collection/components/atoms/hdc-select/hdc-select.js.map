{"version":3,"file":"hdc-select.js","sourceRoot":"","sources":["../../../../src/components/atoms/hdc-select/hdc-select.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Modelable } from '@globals/interfaces';\nimport { Component, EventEmitter, Element, Prop, State, Event, h, Listen } from '@stencil/core';\nimport { getValueByPath } from '@utils';\n\n@Component({\n  tag: 'hdc-select',\n  styleUrl: 'hdc-select.scss',\n})\nexport class HdcSelect implements Modelable {\n  /**\n   * Element of hdc select\n   */\n  @Element() el: HTMLElement;\n  /**\n   * Prop value of hdc select\n   */\n  @Prop({ mutable: true }) value: string | number | object | null;\n  /**\n   * Prop disable of hdc select\n   */\n  @Prop({ mutable: true }) disable: boolean;\n  /**\n   * Prop lock of hdc select\n   */\n  @Prop({ mutable: true }) lock: boolean;\n  /**\n   * Prop items of hdc select\n   */\n  @Prop({ mutable: true }) items: Array<string | object> | undefined;\n  /**\n   * Prop view items of hdc select\n   */\n  @Prop({ mutable: true }) viewItems: number = 8;\n  /**\n   * Prop placeholder of hdc select\n   */\n  @Prop() placeholder: string = '-- Seleccione --';\n  /**\n   * Prop key of hdc select\n   */\n  @Prop() valueKey = 'id';\n  /**\n   * Prop string of hdc select\n   */\n  @Prop() valueLabel = 'name';\n  /**\n   * State filtered items of hdc select\n   */\n  @State() filteredItems: Array<string | object> = [];\n  /**\n   * State search text of hdc select\n   */\n  @State() searchText = '';\n  /**\n   * State search text of hdc select\n   */\n  @State() showDrop: boolean = false;\n\n  @Event() changeBlur: EventEmitter;\n  @Event() changeValue: EventEmitter;\n  /**\n     * Max height of hdc select\n     */\n  maxHeight = 20;\n\n  /**\n   * Determines whether change value filter options on\n   * @param event CustomEvent\n   */\n  onChangeValueFilterOptions(event: string) {\n    this.searchText = event;\n    this.filteredItems =\n      this.items?.filter((option) => {\n        const label =\n          this.valueLabel && typeof option === 'object' ? option[this.valueLabel] : option;\n\n        return label.toLowerCase().includes(this.searchText.toLowerCase());\n      }) ?? [];\n  }\n\n  /**\n   * Determines whether click select option on\n   * @param option string\n   */\n  onClickSelectOption(option: string | object | null) {\n    this.value = this.valueKey && option && typeof option === 'object' ? option[this.valueKey] : option;\n    this.filteredItems = [];\n    this.toggleDrop();\n    this.clearInputSearch();\n    this.changeValue.emit(this.value);\n    this.el.blur();\n  }\n\n  @Listen('click', { target: 'window' })\n  handleOnClick(ev){\n    if(this.showDrop) {\n      if (this.el.contains(ev.target)) {\n        // If click was inside, stop here\n        return;\n      }\n      this.showDrop = false;\n      this.clearInputSearch();\n      this.changeBlur.emit(ev);\n    }\n  }\n  \n  render() {\n    return (\n      <div class=\"hdc-select\">\n        <div \n          class={this.getClassSelectValue()}\n          onClick={() => this.toggleDrop()}>\n          <span class=\"hdc-select-value-text\">{this.getValueKey()}</span>\n          <span class=\"hdc-select-value-icon\">\n            <svg width=\"25\" height=\"15\" viewBox=\"0 0 392 448\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill=\"currentColor\" d=\"m192 284l186-162q15-17 2-30q-17-17-30-2L192 228L36 90Q23 75 6 92q-14 14 3 30z\"/>\n            </svg>\n          </span>\n        </div>\n        <div\n          class={this.getClassInputAutocompleteContainer()}\n          style={{ maxHeight: this.getMaxHeight() }}\n        >\n          <div class=\"hdc-select-search\">\n            <input \n              class=\"hdc-select-search-input\"\n              onInput={ev => this.onInputText(ev)}\n            />\n          </div>\n          <ul class={this.getClassInputAutocomplete()}>\n            <li\n              class=\"hdc-select-item\"\n              onClick={() => this.onClickSelectOption(null)}\n              >\n              {this.placeholder}\n            </li>\n            {this.filteredItems.map((option, index) => (\n              <li\n                key={index}\n                class=\"hdc-select-item\"\n                onClick={() => this.onClickSelectOption(option)}\n              >\n                {this.valueLabel && typeof option === 'object' ? option[this.valueLabel] : option}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  toggleDrop() {\n    if(!this.showDrop) {\n      this.onChangeValueFilterOptions('');\n    }\n    this.showDrop = !this.showDrop;\n  }\n\n  /**\n   * Determines whether input text on\n   * @param input Event\n   */\n  onInputText(input: InputEvent) {\n    const element = input.target as HTMLInputElement;\n\n    this.onChangeValueFilterOptions(element.value);\n  }\n\n  clearInputSearch() {\n    const element = this.el.querySelector('input.hdc-select-search-input') as HTMLInputElement;\n    if(element){\n      element.value = '';\n    }\n  }\n\n  /**\n   * Gets max height\n   * @returns { [key: string]: boolean }\n   */\n  getMaxHeight() {\n    return this.viewItems > 0 ? `${(this.maxHeight * this.viewItems) + 40}px` : '';\n  }\n\n  /**\n   * Gets class select container\n   * @returns { [key: string]: boolean }\n   */\n  getClassInputAutocompleteContainer() {\n    return {\n      'hdc-select-container': true,\n      'hdc-select-container--top': true,\n      'show': this.showDrop,\n    };\n  }\n\n  /**\n   * Gets class select\n   * @returns { [key: string]: boolean }\n   */\n  getClassInputAutocomplete() {\n    return {\n      'hdc-select-options': true,\n    };\n  }\n\n  /**\n   * Gets class select\n   * @returns { [key: string]: boolean }\n   */\n  getClassSelectValue() {\n    return {\n      'hdc-select-value': true,\n      'disabled': this.disable || this.lock,\n      'show': this.showDrop,\n    };\n  }\n\n  /**\n   * Gets value key\n   * @returns string\n   */\n  getValueKey() {\n    if (this.value) {\n      const itemSelected = this.items?.find((item: string | number | object) => {\n        return typeof item === 'object' ? item[this.valueKey] == this.value : item == this.value;\n      });\n      return (\n        this.valueKey && typeof itemSelected === 'object'\n          ? getValueByPath(itemSelected, this.valueLabel.split('.'))\n          : itemSelected\n      ) as string;\n    } else {\n      return this.placeholder;\n    }\n  }\n\n}\n"]}