{"version":3,"file":"hdc-multiselect.js","sourceRoot":"","sources":["../../../../src/components/atoms/hdc-multiselect/hdc-multiselect.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Element, Prop, State, Event, h, Listen, Method } from '@stencil/core';\n\n@Component({\n  tag: 'hdc-multiselect',\n  styleUrl: 'hdc-multiselect.scss',\n})\nexport class HdcMultiselect {\n  /**\n   * Element of hdc multiselect\n   */\n  @Element() el: HTMLElement;\n  /**\n   * Prop value of hdc multiselect\n   */\n  @Prop({ mutable: true }) value: Array<string | object> | null;\n  /**\n   * Prop disable of hdc multiselect\n   */\n  @Prop({ mutable: true }) disable: boolean;\n  /**\n   * Prop lock of hdc multiselect\n   */\n  @Prop({ mutable: true }) lock: boolean;\n  /**\n   * Prop items of hdc multiselect\n   */\n  @Prop({ mutable: true }) items: Array<string | object> | undefined;\n  /**\n   * Prop view items of hdc multiselect\n   */\n  @Prop({ mutable: true }) viewItems: number = 8;\n  /**\n   * Prop key of hdc multiselect\n   */\n  @Prop({ mutable: true }) valueKey = 'name';\n  /**\n   * Prop string of hdc multiselect\n   */\n  @Prop() valueLabel = 'name';\n  /**\n   * State filtered items of hdc multiselect\n   */\n  @State() filteredItems: Array<string | object> = [];\n  /**\n   * State search text of hdc multiselect\n   */\n  @State() searchText = '';\n  /**\n   * State search text of hdc multiselect\n   */\n  @State() valueOptions: Array<string | object> | null;\n  /**\n   * State search text of hdc multiselect\n   */\n  @State() showDrop: boolean = false;\n  /**\n   * State search text of hdc multiselect\n   */\n  @State() isSelectAll: boolean = false;\n  /**\n   * Event change value of hdc multiselect\n   */\n  @Event() changeValue: EventEmitter<string | object | null>;\n  /**\n     * Max height of hdc multiselect\n     */\n  maxHeight = 20;\n\n  /**\n   * Determines whether change value filter options on\n   * @param event CustomEvent\n   */\n  componentWillUpdate(){\n    if(!this.value) {\n      this.valueOptions = null;\n      this.value = null;\n    }\n  }\n  onChangeValueFilterOptions(event: string) {\n    this.searchText = event;\n    this.filteredItems =\n      this.items?.filter((option) => {\n        const label =\n          this.valueLabel && typeof option === 'object' ? option[this.valueLabel] : option;\n\n        return label.toLowerCase().includes(this.searchText.toLowerCase());\n      }) ?? [];\n      requestAnimationFrame(() => {\n        const list = this.el.querySelectorAll('input[data-name=\"selectItems\"]');\n        if (list) {\n          list.forEach(item => {\n            const checkbox = item as HTMLInputElement;\n            let flag = this.valueOptions?.map(item => String(item[this.valueKey])).includes(String(checkbox.value));\n            if (flag) {\n              checkbox.checked = true;\n            } else {\n              checkbox.checked = false;\n            }\n          });\n        }        // Do something with liElements\n      });\n  }\n\n  /**\n   * Determines whether click select option on\n   * @param option string\n   */\n  onClickSelectOption(option: string | object) {\n    //Verificamos si ya existen valores seleccionados\n    if (this.valueOptions) {\n      const indexOf = this.valueOptions.findIndex(item => String(item[this.valueKey]) === String(option[this.valueKey]));\n      if (indexOf === -1) {\n        this.valueOptions.push(option);\n      } else {\n        this.valueOptions.splice(indexOf, 1);\n      }\n      if (this.valueOptions.length === 0) {\n        this.valueOptions = null;\n      }\n    } else {\n      this.valueOptions = [option];\n    }\n\n    //Desactivamos el check selectAll \n    const list = this.el.querySelectorAll('input[data-name=\"selectAll\"]');\n    if(list){\n      this.isSelectAll = this.valueOptions?.length === this.items?.length;\n      list.forEach((item: HTMLInputElement) => {\n        item.checked = this.isSelectAll;\n      });\n    }\n    \n    this.value = this.valueOptions?.map(item => item[this.valueKey]) || null;\n    this.changeValue.emit(this.value);\n  }\n\n  @Listen('click', { target: 'window' })\n  handleOnClick(ev) {\n    if (this.showDrop) {\n      if (this.el.contains(ev.target)) {\n        // If click was inside, stop here\n        return;\n      }\n      this.showDrop = false;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"hdc-multiselect\">\n        <button\n          class=\"hdc-multiselect-value\"\n          disabled={this.disable || this.lock}\n          onClick={() => this.toggleDrop()}>\n          <span>{this.getValueText()}</span>\n        </button>\n        <div\n          class={this.getClassInputAutocompleteContainer()}\n        >\n          <div class=\"hdc-multiselect-search\">\n            <input\n              class=\"hdc-multiselect-search-input\"\n              onInput={ev => this.onInputText(ev)}\n            />\n          </div>\n          <ul class={this.getClassInputAutocomplete()} style={{ maxHeight: this.getMaxHeight() }}>\n            <li class=\"hdc-multiselect-item\">\n              <label class=\"hdc-multiselect-item-label\">\n                <input \n                  type=\"checkbox\" \n                  data-name=\"selectAll\" \n                  onClick={() => this.selectAllOptions()} \n                />\n                <span>{'[Seleccionar Todo]'}</span>\n              </label>\n            </li>\n            {this.filteredItems.map((option, index) => (\n              <li\n                key={index}\n                class=\"hdc-multiselect-item\"\n              >\n                <label class=\"hdc-multiselect-item-label\">\n                  <input \n                    type=\"checkbox\" \n                    data-name=\"selectItems\" \n                    value={option[this.valueKey]} \n                    onClick={() => this.onClickSelectOption(option)} \n                  />\n                  <span>{typeof option === 'object' ? option[this.valueLabel] : option}</span>\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  toggleDrop() {\n    if (!this.showDrop) {\n      this.onChangeValueFilterOptions('');\n    }\n    this.showDrop = !this.showDrop;\n  }\n\n  selectAllOptions() {\n    const list = this.el.querySelectorAll('input[data-name=\"selectItems\"]');\n    if (list) {\n      list.forEach(item => {\n        const checkbox = item as HTMLInputElement;\n        if (!this.isSelectAll) {\n          checkbox.checked = true;\n        } else {\n          checkbox.checked = false;\n        }\n      });\n      if (!this.isSelectAll) {\n        this.valueOptions = this.items ? [...this.items] : null;\n      } else {\n        this.valueOptions = null;\n      }\n      this.value = this.valueOptions?.map(item => item[this.valueKey]) || null;\n      this.changeValue.emit(this.value);\n    }\n    this.isSelectAll = !this.isSelectAll;\n  }\n\n  /**\n   * Determines whether input text on\n   * @param input Event\n   */\n  @Method()\n  async onInputText(input: InputEvent) {\n    const element = input.target as HTMLInputElement;\n\n    this.onChangeValueFilterOptions(element.value);\n\n   \n  }\n\n  /**\n   * Gets value text\n   * @returns string\n   */\n  getValueText() {\n    if(this.value) {\n      if(this.isSelectAll) {\n        return 'Todos';\n      } else if(this.value.length > 4) {\n        return `${this.valueOptions?.length} de ${this.items?.length} seleccionados`;\n      }\n\n      return this.valueOptions?.map(item => item[this.valueLabel]).join(', ') || '';\n    }\n    /*\n        this.valueOptions = null;\n    this.value = null;\n    \n    */\n\n    return '-- Seleccione --';\n  }\n\n  /**\n   * Gets max height\n   * @returns { [key: string]: boolean }\n   */\n  getMaxHeight() {\n    return this.viewItems > 0 ? `${(this.maxHeight * this.viewItems) + 40}px` : '';\n  }\n\n  /**\n   * Gets class multiselect container\n   * @returns { [key: string]: boolean }\n   */\n  getClassInputAutocompleteContainer() {\n    return {\n      'hdc-multiselect-container': true,\n      'hdc-multiselect-container--top': true,\n      'show': this.showDrop,\n    };\n  }\n\n  /**\n   * Gets class multiselect\n   * @returns { [key: string]: boolean }\n   */\n  getClassInputAutocomplete() {\n    return {\n      'hdc-multiselect-options': true,\n    };\n  }\n\n}\n"]}